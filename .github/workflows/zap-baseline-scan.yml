name: OWASP ZAP Baseline Scan

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ feature/*, task/*, bugfix/* ]

jobs:
  deploy-and-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install

    - name: Build applications
      run: |
        npm run build

    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      id: vercel-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./

    - name: Wait for deployment
      run: sleep 30

    - name: OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        target: ${{ steps.vercel-deploy.outputs.preview-url }}
        rules_file_name: '.zap/rules/baseline-rules.tsv'
        cmd_options: '-a -d -T 5 -m 2'
        fail_action: false
        allow_issue_writing: false

    - name: Upload ZAP Baseline Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-baseline-report-${{ github.run_number }}
        path: |
          report_html.html
          report_md.md
          report_json.json

    - name: Create ZAP Report Summary
      if: always()
      run: |
        echo "## üîí OWASP ZAP Baseline Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Target URL:** ${{ steps.vercel-deploy.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
        echo "**Scan Type:** Baseline Scan" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f report_md.md ]; then
          echo "### Scan Results" >> $GITHUB_STEP_SUMMARY
          cat report_md.md >> $GITHUB_STEP_SUMMARY
        else
          echo "### Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "Baseline scan completed successfully! ‚úÖ" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üìÅ **Full reports available in workflow artifacts**" >> $GITHUB_STEP_SUMMARY

    - name: Comment PR with ZAP Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let reportContent = '';
          
          if (fs.existsSync('report_md.md')) {
            reportContent = fs.readFileSync('report_md.md', 'utf8');
          } else {
            reportContent = 'Baseline scan completed successfully! ‚úÖ\n\nNo security issues found in the baseline scan.';
          }
          
          const comment = `## üîí OWASP ZAP Baseline Scan Results
          
          **Target URL:** ${{ steps.vercel-deploy.outputs.preview-url }}
          **Scan Type:** Baseline Scan
          **Branch:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          
          ### Scan Results
          ${reportContent}
          
          ---
          üìÅ **Full reports available in [workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})**
          
          <sub>ü§ñ This comment was automatically generated by the OWASP ZAP baseline scan workflow.</sub>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });